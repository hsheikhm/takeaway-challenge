{"name":"Takeaway App","tagline":"Built in Ruby using SOLID principles and fully test-driven","body":"Takeaway Challenge [![Build Status](https://travis-ci.org/hsheikhm/takeaway-challenge.svg?branch=master)](https://travis-ci.org/hsheikhm/takeaway-challenge) [![Coverage Status](https://coveralls.io/repos/hsheikhm/takeaway-challenge/badge.svg?branch=master&service=github)](https://coveralls.io/github/hsheikhm/takeaway-challenge?branch=master)\r\n==================\r\n\r\n* [Task](#task)\r\n* [My Approach](#my-approach)\r\n* [Directory Structure](#directory-structure)\r\n* [Feature Test Sample](#feature-test-sample)\r\n* [Download Instructions](#download-instructions)\r\n\r\n## Task\r\n\r\n#### Write a Takeaway program with the following user stories:\r\n\r\n```\r\nAs a customer\r\nSo that I can check if I want to order something\r\nI would like to see a list of dishes with prices\r\n\r\nAs a customer\r\nSo that I can order the meal I want\r\nI would like to be able to select some number of several available dishes\r\n\r\nAs a customer\r\nSo that I can verify that my order is correct\r\nI would like to check that the total I have been given matches the sum of the various dishes in my order\r\n\r\nAs a customer\r\nSo that I am reassured that my order will be delivered on time\r\nI would like to receive a text such as \"Thank you! Your order was placed and will be delivered before 18:52\" after I have ordered\r\n```\r\n\r\n## My Approach\r\n\r\nI started by playing around with the feature tests to understand what objects and methods would need to be created. This helped me to put together a **Domain Model** that I could work from. I then started to write some actual production code so that I could work out how the classes would interact with each other. Once I was happy with what needed to be done I then deleted all my production code and started writing my unit tests. I naturally stuck to the **Red-Green-Refactor** process. After making all my unit tests pass I then started to write the actual code.\r\n\r\nThe main principles that I wanted to draw upon were those of **Single Responsibility Principle (SRP)** and **Dependency Injection (DI)**. In order to use SRP I made sure to structure my code in 4 separate classes with each having its own responsibility. This naturally made my testing easier and my code easier to read. As for DI, you will see that I had incorporated this into my Takeaway class within the *initialize* method. As a result I was able to use the London Style (as opposed to Chicago Style) when it came to my RSpec testing since I could use doubles to represent my other class objects. This allowed all my unit tests to become isolated.\r\n\r\nTo create the **text message** function I used the **Twilio API**.\r\n\r\nTo carry out SRP I had decided to create 4 separate classes:\r\n\r\n* [Takeaway](https://github.com/hsheikhm/takeaway-challenge/blob/master/lib/takeaway.rb) (User interaction, delegating responsibilities, raising errors where relevant)\r\n* [Order](https://github.com/hsheikhm/takeaway-challenge/blob/master/lib/order.rb) (Responsible for creating new orders, adding items to basket, calculating final costs)\r\n* [Menu](https://github.com/hsheikhm/takeaway-challenge/blob/master/lib/menu.rb) (To list all dishes and prices)\r\n* [TextMessenger](https://github.com/hsheikhm/takeaway-challenge/blob/master/lib/textmessenger.rb) (Responsible for sending the text message to user)\r\n\r\n## Directory Structure\r\n\r\n```\r\n├── lib/\r\n│   ├── menu.rb\r\n│   ├── order.rb\r\n│   ├── takeaway.rb\r\n│   └── textmessenger.rb\r\n│   \r\n├── spec/\r\n│   ├── menu_spec.rb\r\n│   ├── order_spec.rb\r\n│   ├── spec_helper.rb\r\n│   ├── takeaway_spec.rb\r\n│   └── textmessenger_spec.rb\r\n│\r\n```\r\n\r\n## Feature Test Sample\r\n\r\n***New Takeaway Object:***\r\n```\r\n2.2.3 :001 > takeaway = Takeaway.new\r\n```\r\n***User can see the menu:***\r\n```\r\n2.2.3 :002 > takeaway.read_menu\r\n => {\"Spring Roll\"=>0.99, \"Fried Prawn\"=>2.99, \"Egg Fried Rice\"=>1.99, \"Prawn Cracker\"=>0.79, \"Sweet and Sour Fish\"=>3.99, \"Chilli Chicken\"=>4.99, \"Noodle Soup\"=>2.99}\r\n```\r\n***User can place an order and specify quantity:***\r\n```\r\n2.2.3 :003 > takeaway.place_order(\"Spring Roll\", 2)\r\n => \"2x Spring Roll(s) added to your basket.\"\r\n2.2.3 :004 > takeaway.place_order(\"Egg Fried Rice\", 5)\r\n => \"5x Egg Fried Rice(s) added to your basket.\"\r\n```\r\n***User can see their shopping basket:***\r\n```\r\n2.2.3 :005 > takeaway.basket_summary\r\nSpring Roll x2 = £1.98, Egg Fried Rice x5 = £9.95\r\n```\r\n***User can see the total cost:***\r\n```\r\n2.2.3 :006 > takeaway.total_cost\r\n => \"Total Cost: £11.93\"\r\n```\r\n***User can checkout their order and will receive SMS confirmation:***\r\n```\r\n2.2.3 :007 > takeaway.checkout(11.93)\r\n => \"You will shortly receive an SMS confirming your order.\"\r\n```\r\n\r\n## Download Instructions\r\n\r\n```\r\n$ git clone https://github.com/hsheikhm/takeaway-challenge.git\r\n$ cd takeaway-challenge\r\n$ irb\r\n```\r\n\r\nAuthor: [Hamza Sheikh](https://github.com/hsheikhm)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}